###############################################################################
#                           Authelia Configuration                            #
###############################################################################

theme: auto

identity_validation:
  reset_password:
    jwt_secret: "{{ service.jwt_secret }}"

server:
  address: "tcp://0.0.0.0:{{ service.port }}/authelia"
  buffers:
    read: 8192  # Default is 4096 but Bazarr will display white page occasionally
    write: 8192 # Default is 4096 but Bazarr will display white page occasionally
  endpoints:
    authz:
      auth-request:
        implementation: 'AuthRequest'
    enable_pprof: false
    enable_expvars: false
  disable_healthcheck: false
  tls:
    key: ""
    certificate: ""

log:
  level: info
  format: json
  file_path: /config/authelia.log
  keep_stdout: true

totp:
  issuer: {{ service.url }}
  period: 30
  skew: 1

authentication_backend:
  password_reset:
    disable: false
  refresh_interval: 5m
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2id
#      iterations: 1
#      key_length: 32
#      salt_length: 16
#      memory: 1024
#      parallelism: 8

access_control:
  default_policy: deny
  rules:
    - domain:
        - "auth.{{ service.url }}"
      policy: bypass

    - domain:
        - "{{ service.url }}"
      subject:
        - "group:admins"
        - "group:guest"
      policy: one_factor

    - domain:
        - "*.{{ service.url }}"
      subject:
        - "group:admins"
        - "group:guest"
      policy: one_factor

session: 
  secret: '{{ service.session_secret }}'
  name: 'authelia_session'
  same_site: 'lax'
  inactivity: '5m'
  expiration: '1h'
  remember_me: '1M'
  cookies:
    - domain: '{{ service.url }}'
      authelia_url: 'https://auth.{{ service.url }}/'
      default_redirection_url: 'https://{{ service.url }}/'

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 1h

storage:
  encryption_key: 4$pspkCyCL/HwXYft5oZ5GDg$8aXXH4Zjy0uTkrkDaNZYb5YcHqe/MXkKNfrXaIiAsMI
{% if service.storage is defined and service.storage == 'postgres' and service.postgres_host is defined and service.postgres_port is defined and service.postgres_db is defined
and service.postgres_user is defined and service.postgres_pw is defined %}
  postgres:
    address: 'tcp://{{ service.postgres_host }}:{{ service.postgres_port }}'
    servers: []
    database: '{{ service.postgres_db }}'
    schema: 'public'
    username: '{{ service.postgres_user }}'
    password: '{{ service.postgres_pw }}'
    timeout: '5s'
{% else %}
  local:
    path: /config/db.sqlite3
{% endif %}

{% if service.notifier is defined and service.notifier == 'smtp'
   and service.smtp_username is defined and service.smtp_gmail_app_pw is defined %}
notifier:
  smtp:
    username: {{ service.smtp_username }}
    password: {{ service.smtp_gmail_app_pw }}  # Not your Gmail password â€“ see below!
    address: smtp.gmail.com:587
    sender: {{ service.smtp_username }}
    subject: "[Authelia] {title}"
    startup_check_address: {{ service.smtp_username }}
    identifier: gmail.com
    tls:
      server_name: smtp.gmail.com
      skip_verify: false
    disable_require_tls: false
    disable_starttls: false
{% else %}
notifier:
  filesystem:
    filename: /config/notification.txt
{% endif %}